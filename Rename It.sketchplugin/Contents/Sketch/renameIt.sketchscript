  

// create alert window
//////////////////////////////////////////////////////
function createAlertWindow()
{
  var alert = COSAlertWindow.new();

  function createTextFieldWithlabel(label, defaultValue) {
    alert.addTextLabelWithValue(label);
    alert.addTextFieldWithValue(defaultValue);
  }

  alert.setMessageText("Rename Selected Layers");
  alert.setInformativeText("Number Sequence: %N or %n \nDimensions: %W %H \nMove Original Layer Name: *");

  // Name
  createTextFieldWithlabel("Name:", "");

  // Interator
  createTextFieldWithlabel("Starts Number Sequence From:", "1");

  // Actions buttons
  alert.addButtonWithTitle('OK');
  alert.addButtonWithTitle('Cancel');

  return alert;
}


// handle alert response
//////////////////////////////////////////////////////
function handleAlertResponse(alert, responseCode) {
  if (responseCode == "1000") {
      function valAtIndex (view, index) {
          return parseInt(view.viewAtIndex(index).stringValue());
      }

      return {
          basename: alert.viewAtIndex(1).stringValue(),
          startsFrom: valAtIndex(alert,3)
      }
  }

  return null;
}


// create new layer name
//////////////////////////////////////////////////////
var createLayerName = function(options){
  var nextName = options.basename;  

  var selectionCount = options.selectionCount,
      selectionOrder = options.selectionOrder,
      startsFrom = options.startsFrom,
      nIterators = nextName.match(/%N+/ig),
      aIterators = nextName.match(/%A+/ig);

  // Number Iterator
  if(nIterators != null){
    var i = 0;

    // Zero Fill Helper
	function paddy(n, p, c) {
	    var pad_char = typeof c !== 'undefined' ? c : '0';
	    var pad = new Array(1 + p).join(pad_char);
	    return (pad + n).slice(-pad.length);
	}

    function replaceNumber(match){
      var nnSize = match.length - 1;

      var letter = match.charAt(1);
      var num = (letter == "N") ? selectionOrder : selectionCount - selectionOrder - 1;
      num += startsFrom;
      
      // Check weather or not the number is bigger than the nnSizes (works up to 9999)
      if (num > 999 && (nnSize == 1 || nnSize == 2 || nnSize == 3))
        nnSize = 4
      else if (num > 99 && (nnSize == 1 || nnSize == 2)) 
        nnSize = 3
      else if (num > 9 && nnSize == 1) 
        nnSize = 2

      return paddy(num, nnSize);
    }

    nextName = nextName.replace(/\%n+/ig, replaceNumber);
  }

    // Alpha Iterator
  if (aIterators != null) {
    var i = 0,
        alphaStr = "abcdefghijklmnopqrstuvwxyz",
        alphaArr = alphaStr.split(""),
        totalAlpha = alphaArr.length;

    function replaceAlpha(match){
      var aaSize = match.length - 1,
        letter = match.charAt(1),
        alpha = alphaArr[selectionOrder % totalAlpha];

        if (selectionOrder >= totalAlpha)
        {
          var flIdx = Math.floor(selectionOrder / totalAlpha);
          alpha = "" + alphaArr[flIdx - 1] + "" + alpha
        }

      return (letter == "A") ? alpha.toUpperCase() : alpha
    }

    nextName = nextName.replace(/\%a/ig, replaceAlpha);
  }

  // Replace plus '+'
  nextName = nextName.replace(/(\\\+)|\+/, function(_, a){ 
    return a || options.prevName;
  });

  // Replace escaped plus '\+'
  nextName = nextName.replace(/\\\+/g, "+");

  // Replace asterisks '*'
  nextName = nextName.replace(/(\\\*)|\*/g, function(_, a){ 
    return a || options.prevName; 
  });

  // Replace escaped asterisks '\*'
  nextName = nextName.replace(/\\\*/g, "*");

  // Replace %W or %w with width
  nextName = nextName.replace(/%w/ig, options.layerWidth);

  // Replace %H or %h with height
  nextName = nextName.replace(/%h/ig, options.layerHeight);

  // Return new name
  return nextName;

}


// start script
//////////////////////////////////////////////////////
var renameSelectedLayers = function(context){
  var doc = context.document;

  var selection = context.selection;
  var selectionCount = [selection count];

  if (selectionCount > 0) {
    
    // create alert window 
    var alert = createAlertWindow();

    // run modal and populate options from alert response
    var options = handleAlertResponse(alert, alert.runModal());

    if (!options.startsFrom) options.startsFrom = 1;

    // create new layer name for each selected layer
    for (var i=0; i<selectionCount; i++) {
        var layer = selection[i];
        var frame = [layer frame];

        // set additional options from layer info
        options.layerWidth = [frame width];
        options.layerHeight = [frame height];
        options.prevName = [layer name];
        options.selectionOrder = i;
        options.selectionCount = selectionCount;


        var nextLayerName = createLayerName(options);
        
        [layer setName:nextLayerName];

        // Success message
        [doc showMessage: "Rename It: Updated "+selectionCount+" layer(s)"];
    }
  }
  else {
      // No layer selected
      [doc showMessage: "Rename It: You need to select at least one layer"];
  }

}